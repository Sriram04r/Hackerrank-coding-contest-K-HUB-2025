{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO3ec+ain+hnzCh2LRXF0J8",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sriram04r/Hackerrank-coding-contest-K-HUB-2025/blob/main/Test%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Task 1"
      ],
      "metadata": {
        "id": "dKjabRd4pD3N"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Task\n",
        "Given an integer,n, perform the following conditional actions:\n",
        "\n",
        "If n is odd, print Weird\n",
        "If n is even and in the inclusive range of 2 to 5, print Not Weird\n",
        "If n is even and in the inclusive range of 6 to 20, print Weird\n",
        "If n is even and greater than 20, print Not Weird\n",
        "\n"
      ],
      "metadata": {
        "id": "ZVYeZ1kdnBVA"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uB_wZf1kmxtl",
        "outputId": "f8ec5712-e2f3-482f-9e95-d8262dbe56c5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3\n",
            "Weird\n"
          ]
        }
      ],
      "source": [
        "n = int(input())\n",
        "if n %2!=0:\n",
        "    print('Weird')\n",
        "    for i in range(2,5):\n",
        "        if n % 2 == 0:\n",
        "            print('Not Weird')\n",
        "    for i in range(6,20):\n",
        "        if n >= 20:\n",
        "            print('Weird')\n",
        "if  n > 20 and n % 2 == 0:\n",
        "    print('Not Weird')\n",
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Task 2"
      ],
      "metadata": {
        "id": "B71Q1CiDneaz"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "In the Gregorian calendar, three conditions are used to identify leap years:\n",
        "\n",
        "The year can be evenly divided by 4, is a leap year, unless:\n",
        "The year can be evenly divided by 100, it is NOT a leap year, unless:\n",
        "The year is also evenly divisible by 400. Then it is a leap year."
      ],
      "metadata": {
        "id": "iCzhBJpGnnrW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def is_leap(year):\n",
        "    return year % 400 == 0 or (year % 4 == 0 and year % 100 != 0)"
      ],
      "metadata": {
        "id": "a9thCqkknpjI"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Task 3"
      ],
      "metadata": {
        "id": "NWPeLd1mow6_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "You are given a string and your task is to swap cases. In other words, convert all lowercase letters to uppercase letters and vice versa."
      ],
      "metadata": {
        "id": "AF9O-dyroziK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def swap_case(s):\n",
        "    result = ''\n",
        "    for char in s:\n",
        "        if char.islower():\n",
        "            result += char.upper()\n",
        "        elif char.isupper():\n",
        "            result += char.lower()\n",
        "        else:\n",
        "            result += char\n",
        "    return result"
      ],
      "metadata": {
        "id": "dO_AUSako03I"
      },
      "execution_count": 3,
      "outputs": []
    }
  ]
}